/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* buildT(vector<int>& nums,int i,int j)
    {
        if(i>j)
            return NULL;
        
        TreeNode* root=new TreeNode();
        int mid=(i+j)>>1;
        root->val=nums[mid];
        
        root->left=buildT(nums,i,mid-1);
        root->right=buildT(nums,mid+1,j);
        return root;
        
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        int s=nums.size();
        
        // TreeNode* root=new TreeNode();
        
        return buildT(nums,0,s-1);
        // return root;
        
    }
};