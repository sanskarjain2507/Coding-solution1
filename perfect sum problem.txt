//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{

	public:
	int k;
	int ps(int arr[],int n,int sum,long int &s,vector<vector<int>> &t)
	{
	   
	   if(t[n][sum]!=-1)
	     return t[n][sum];
	  
	   if(sum==0)
	        return 1;
	        
	    if(n==0)
	        return 0;
        
      
	    
	    
	   // if(sum-arr[n-1]==0)
	   //      s=(s+1)%k;
	    if(sum-arr[n-1]>=0)
	    {
	        t[n][sum]=(ps(arr,n-1,sum-arr[n-1],s,t)%k+ps(arr,n-1,sum,s,t)%k)%k;
	    }
	    else
	    {
	       t[n][sum]=ps(arr,n-1,sum,s,t)%k;
	    }
	    return t[n][sum];
	}
	
	int perfectSum(int arr[], int n, int sum)
	{
	    sort(arr,arr+n);
	    
	    for(int i=0;i<n/2;i++)
	    {
	        int x=arr[i];
	        arr[i]=arr[n-i-1];
	        arr[n-i-1]=x;
	    }
        // Your code goes here
        vector<vector<int>> t;
        k=1000000007;
        for(int i=0;i<n+1;i++)
        {
            vector<int> temp(sum+1,-1);
            t.push_back(temp);
        }
        
        for(int i=0;i<sum+1;i++)
            t[0][i]=0;
            
        for(int i=0;i<n+1;i++)
            t[i][0]=1;
        
        long int s=0;
        
        // for(int i=1;i<n+1;i++)
        // {
        //     for(int j=1;j<sum+1;j++)
        //     {
        //         if(arr[i-1]<=j)
        //             t[i][j]=(t[i-1][j]%k+t[i-1][j-arr[i-1]]%k)%k;
        //         else
        //             t[i][j]=t[i-1][j];
        //     }
        // }
        // return t[n][sum];
        return ps(arr,n,sum,s,t);
        
  
	}
	  
};

//{ Driver Code Starts.
int main() 
{
   	
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n, sum;

        cin >> n >> sum;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.perfectSum(a, n, sum) << "\n";
	     
    }
    return 0;
}

// } Driver Code Ends