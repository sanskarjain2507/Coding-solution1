/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/
#include<bits/stdc++.h>
void getT(BinaryTreeNode<int> *root,vector<int> &pre,vector<int> &ino,vector<int> &post)
{
    pre.push_back(root->data);
    
    if(root->left!=NULL)
    {
        getT(root->left,pre,ino,post);
    }
    ino.push_back(root->data);
    
    if(root->right!=NULL)
    {
        getT(root->right,pre,ino,post);
    }
    post.push_back(root->data);
}

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    vector<int> pre;
    vector<int> ino;
    vector<int> post;
    
    vector<vector<int>> ans;
    if(root==NULL)
        return ans;
    getT(root,pre,ino,post);
    ans.push_back(ino);
    ans.push_back(pre);
    ans.push_back(post);
    return ans;
    
}