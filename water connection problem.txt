// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
    public:
    vector<vector<int>> solve(int n,int p,vector<int> a,vector<int> b,vector<int> d)
    {
        vector<int> start(20,-1);
        vector<int> end(20,-1);
        vector<int> weights(20,1000);
        
        for(int i=0;i<p;i++)
        {
            int k1=a[i];
            int k2=b[i];
            int k3=d[i];
            if(start[k1-1]==-1) 
            {
                if(end[k1-1]==-1)
                {
                    if(start[k2-1]==-1) //if k1 is not a start and end ,also k2 is not a start and end
                    {
                       
                        start[k1-1]=k2-1;
                        end[k2-1]=k1-1;
                        weights[k1-1]=k3;
                    }
                    else //if k1 is not a start and end but k2 is start of someone
                    {
                        end[start[k2-1]]=k1-1;
                        start[k1-1]=start[k2-1];
                        weights[k1-1]=min(weights[k2-1],k3);
                        start[k2-1]=-1;
                        weights[k2-1]=1000;
                        
                    }
                }
                else //if k1 is end of someone
                {
                    if(start[k2-1]==-1) //if k2 is not start of someone
                    {  
                        end[k2-1]=end[k1-1];
                        start[end[k1-1]]=k2-1;
                        weights[end[k1-1]]=min(weights[end[k1-1]],k3);
                        end[k1-1]=-1;
                        
                    }
                    else
                    {
                        end[start[k2-1]]=end[k1-1];
                        weights[end[k1-1]]=min(min(weights[end[k1-1]],weights[k2-1]),k3);
                        start[end[k1-1]]=start[k2-1];
                        start[k2-1]=-1;
                        weights[k2-1]=1000;
                        end[k1-1]=-1;
                        
                    }
                }
               
            }
        
        }
        vector<vector<int>> ans;
        ans.clear();
        for(int i=0;i<20;i++)
        {
            if(start[i]!=-1)
            {
                vector<int> v;
                v.push_back(i+1);
                v.push_back(start[i]+1);
                v.push_back(weights[i]);
                ans.push_back(v);
                
                
            }
        }
        return ans;
    }
};


// { Driver Code Starts.
int main()
{
	int t,n,p;
	cin>>t;
	while(t--)
    {
        cin>>n>>p;
        vector<int> a(p),b(p),d(p);
        for(int i=0;i<p;i++){
            cin>>a[i]>>b[i]>>d[i];
        }
        Solution obj;
        vector<vector<int>> answer = obj.solve(n,p,a,b,d);
        cout<<answer.size()<<endl;
        for(auto i:answer)
        {
            cout<<i[0]<<" "<<i[1]<<" "<<i[2]<<endl;
        }
        
    }
	return 0;
}  // } Driver Code Ends