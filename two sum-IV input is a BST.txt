/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    stack<TreeNode*> s;
    stack<TreeNode*> s1;
  
    int next() {
        TreeNode* t=s.top();
        s.pop();
        int k=t->val;
     
        t=t->right;
        while(t!=NULL)
        {
            s.push(t);
            t=t->left;
        }
            
        
        return k;
        
    }
    
    int prev()
    {
        TreeNode* t=s1.top();
        s1.pop();
        int k=t->val;
     
        t=t->left;
        while(t!=NULL)
        {
            s1.push(t);
            t=t->right;
        }
            
        
        return k;
    }
    
    bool findTarget(TreeNode* root, int k) {
       
        TreeNode* root1=root;
        while(root!=NULL)
        {
            s.push(root);
            root=root->left;
        }
        
        root=root1;
        
        while(root!=NULL)
        {
            s1.push(root);
            root=root->right;
        }
     
        
        int i=next();
        int j=prev();
        
        while(i<j)
        {
            if(i+j==k)
                return 1;
            
            if(i+j>k)
                j=prev();
            else
                i=next();
        }
        return 0;
    }
};