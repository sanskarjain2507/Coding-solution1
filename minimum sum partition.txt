//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{

  public:
  
    int findknap(int arr[],int n,int sum,vector<vector<int>> &t)
    {
       
        
        if(n==0 || sum==0)
            return 0;
         if(t[n][sum]!=-1)
            return t[n][sum];
        if(sum-arr[n-1]>=0)
            t[n][sum]=max(arr[n-1]+findknap(arr,n-1,sum-arr[n-1],t),findknap(arr,n-1,sum,t));
        else
            t[n][sum]=findknap(arr,n-1,sum,t);
        return t[n][sum];
    }
	int minDifference(int arr[], int n)  { 
	    
	    int s=0;
	    
	    for(int i=0;i<n;i++)
	        s+=arr[i];
	    
	    int sum=s/2;
	    s=s-sum;
	 
	    vector<vector<int>> t;
	    
	    for(int i=0;i<n+1;i++)
	    {
	        vector<int> temp(sum+1,-1);
	        t.push_back(temp);
	    }
	    
	    findknap(arr,n,sum,t);
	    t[n][sum]=max(0,t[n][sum]);
	 
	    return abs(s-t[n][sum]+(sum-t[n][sum]));
	} 
};


//{ Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDifference(a, n) << "\n";
	     
    }
    return 0;
}
// } Driver Code Ends