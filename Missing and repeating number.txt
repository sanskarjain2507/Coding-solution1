vector<int> Solution::repeatedNumber(const vector<int> &A) {
/*
   In this we use the equation

	1+2+3+...n=n*(n+1)/2

	And

	1*1+2*2+3*3+...n*n=n(n+1)(2n+1)/6

So we add the numbers in array to get S1=(sum from 1 to n - sum of elements in array) such that
		X-Y=S1
Where X,Y are   missing,repeated number resp.

Now we calculate sum of squares of  array and we obtain sum S2=(sum of squares from 1 to n -original sum of squares in array)
	Now,
		X2-Y2=S2

	Now,
		X+Y=S2/S1=S3

	So,
	    2X=S1+S3
	=>X=(S1+S3)/2
	=> Y=X-S1

   */
    int s=A.size();
    vector<int> result;
    long long   sum1=0;
    long long  sum2=0;
        
    long long  s1=0;
    for(long long  i=0;i<s;i++)
    {
        sum1=(long long )A[i];
        sum2=(s-i);
        s1+=(sum2-sum1);
    }
    
    long long  sumsqr1=0;
    long long  sumsqr2=0;
    long long  s2=0;
    for(long long  i=0;i<s;i++)
    {
        sumsqr1=((long long )A[i]* (long long )A[i]);
        sumsqr2=((s-i)*(s-i));
        s2+=(sumsqr2-sumsqr1);
    }

  

    long long s3=s2/s1;
    long long  s4=(s1+s3)/2;
    result.push_back(s4-s1);
    result.push_back(s4);
    
    return result;
    

}
