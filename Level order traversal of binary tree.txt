/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        vector<vector<int>> ans;
        
        
        queue<pair<TreeNode*,int>> q;
        
        if(root==NULL)
            return ans;
        
        q.push(make_pair(root,0));
        int k=0;
        
        vector<int> temp;
        while(!q.empty())
        {
            pair<TreeNode*,int> p= q.front();
            q.pop();
            
            if(p.second!=k)
            {
                ans.push_back(temp);
                temp.clear();
                k++;
            }
            
            if(p.first->left!=NULL)
            {
                q.push(make_pair(p.first->left,p.second+1));
            }
            
             
            if(p.first->right!=NULL)
            {
                q.push(make_pair(p.first->right,p.second+1));
            }
            temp.push_back(p.first->val);
            
        }
        ans.push_back(temp);
        return ans;
    }
};