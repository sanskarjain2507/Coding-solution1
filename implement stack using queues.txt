class MyStack {
public:
    queue<int> q1;
    queue<int> q2;
    MyStack() {
        
    }
    
    void push(int x) {
        q1.push(x);
    }
    
    int pop() {
        int x;
        if(q1.empty())
        {
            while(!q2.empty())
            {
                x=q2.front();
                q2.pop();
                if(!q2.empty())
                    q1.push(x);
            }
        }
        else
        {
             while(!q1.empty())
            {
                x=q1.front();
                q1.pop();
                if(!q1.empty())
                    q2.push(x);
            }
        }
        return x;
    }
    
    int top() {
        int x;
        if(q1.empty())
        {
            while(!q2.empty())
            {
                x=q2.front();
                q2.pop();
                q1.push(x);
            }
        }
        else
        {
             while(!q1.empty())
            {
                x=q1.front();
                q1.pop();
                q2.push(x);
            }
        }
        return x;
    }
    
    bool empty() {
        return q1.empty() &&q2.empty();
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */