/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root=new TreeNode(preorder[0]);
        //just add nodes in BST from left to right
        for(int i=1;i<preorder.size();i++)
        {
            TreeNode* r1=root;
            
            while(1)
            {
                if(preorder[i]>r1->val)
                {
                    if(r1->right==NULL)
                    {
                        TreeNode* temp=new TreeNode(preorder[i]);
                        r1->right=temp;
                        break;
                    }
                    else
                    {
                        r1=r1->right;
                    }
                } 
                else
                {
                    if(r1->left==NULL)
                    {
                        TreeNode* temp=new TreeNode(preorder[i]);
                        r1->left=temp;
                        break;
                    }
                    else
                    {
                        r1=r1->left;
                    }
                    
                }
            }
        }
        return root;
    }
};