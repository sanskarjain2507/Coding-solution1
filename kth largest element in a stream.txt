class KthLargest {
public:

    /*
    
    Intutuion is just store k elements only in minheap and then return the p.top which is minimuum among these stream as it is kth largest
    */
    
    priority_queue<int, vector<int>, greater<int>> p;
    int k1;
    int k2;
    KthLargest(int k, vector<int>& nums) {
        k1=k;
        for(int i=0;i<nums.size();i++)
        {
            if(p.size()==k1)
            {
                k2=p.top();
              
                if(k2<=nums[i])
                {
                    p.push(nums[i]);
                    p.pop();
                    
                }
                k2=p.top();
                 
            }
            else
                p.push(nums[i]);
        }
         
        
        
    }
    
    int add(int val) {
        
        if(p.size()<k1)
        {
            p.push(val);
            k2=p.top();
            return k2;
        }
        if(val<k2)
            return k2;
        
        if(k2<=val)
        {
            p.push(val);
            p.pop();
           
        }
        k2=p.top();
        return k2;

    }
};

/**
 * Your KthLargest object will be instantiated and called as such:
 * KthLargest* obj = new KthLargest(k, nums);
 * int param_1 = obj->add(val);
 */