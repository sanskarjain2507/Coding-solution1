class Solution {
public:
    
    int ispalindrome(string s)
    {
        int i=0;
        int j=s.length()-1;
        
        while(i<j)
        {
            if(s[i]!=s[j])
                return 0;
            i++;
            j--;
        }
        return 1;
    }
    
    void partitionstr(string &s,int i,vector<vector<string>> &ans,vector<string> temp,int l)
    {
        if(i>=l)
        {
            if(!temp.empty())
                ans.push_back(temp);
            return;
        }
        
       
        for(int k=i;k<l;k++)
        {
            string st="";
            for(int j=i;j<=k;j++)
            {
                 st+=s[j];
            }
            
            if(ispalindrome(st))
            {
                temp.push_back(st);
                partitionstr(s,k+1,ans,temp,l);
                temp.pop_back();
            }
         
        
        }
        
      
        
    }
    
    vector<vector<string>> partition(string s) {
        
        vector<vector<string>> ans;
        vector<string> temp;
        int l=s.length();
        partitionstr(s,0,ans,temp,l);
        return ans;
    }
};