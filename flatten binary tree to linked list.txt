/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    
    void flat(TreeNode* root)
    {   
        
        if(root->left!=NULL)
            flat(root->left);
           
        if(root->right!=NULL)
            flat(root->right);
        
        TreeNode* t=root;
        
        while(t->left!=NULL)
            t=t->left;
        
        if(t!=root)
        {
            // TreeNode* t1=t;
            while(t->right!=NULL)
            {
                t=t->right;
            }
            t->right=root->right;
            root->right=root->left;
            root->left=NULL;
        }
        
        
    }
    
    void flatten(TreeNode* root) {
        if(root==NULL)
            return;
        flat(root);
        
    
    }
};