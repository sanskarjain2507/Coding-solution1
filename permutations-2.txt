class Solution {
public:
    
    void getperm(vector<int> &nums,int &s,set<vector<int>> &st,vector<int> &taken,vector<int> &temp,int &s1)
    {
        if(s1==s)
        {
            st.insert(temp);
            return;
        }
        
        for(int i=0;i<s;i++)
        {
            if(!taken[i])
            {
                taken[i]=1;
                temp[s1]=nums[i];
                s1++;
                getperm(nums,s,st,taken,temp,s1);
                s1--;
                // temp.pop_back();
                taken[i]=0;
            }
        }
    }
    
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        int s=nums.size();
        
        vector<vector<int>> ans;
        
        set<vector<int>> st;
        vector<int> taken(s,0);
        vector<int> temp(s,0);
        int s1=0;
        getperm(nums,s,st,taken,temp,s1);
        
        for(auto it=st.begin();it!=st.end();it++)
        {
            ans.push_back(*it);
        }
        return ans;
        
    }
};