class Solution {
public:
    
    void ss(vector<int> &nums,vector<int> temp,set<vector<int>> &ans,int i,int s)
    {
        if(i==s)
        {
            // sort(temp.begin(),temp.end());
            ans.insert(temp);
        }
        else
        {
            ss(nums,temp,ans,i+1,s);
            temp.push_back(nums[i]);
            ss(nums,temp,ans,i+1,s);   
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        set<vector<int>> ans;
        sort(nums.begin(),nums.end());
        vector<int> temp;
        int s=nums.size();
        ss(nums,temp,ans,1,s);
        temp.push_back(nums[0]);
        ss(nums,temp,ans,1,s);
        
        vector<vector<int>> ans1;
        for(auto it=ans.begin();it!=ans.end();it++)
        {
            ans1.push_back(*it);
        }
        return ans1;
    }
};
