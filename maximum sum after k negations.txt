// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
    public:
    long long int maximizeSum(long long int a[], int n, int k)
    {
        sort(a,a+n);
        
        int j=0;
        
        //start negating smaleest numbers until they are -ve
        while(j<n && k)
        {
            if(a[j]<0)
            {
                a[j]=-a[j];
                k--;
                j++;
            }
            else
                break;
            
            
        }
        
        if(k!=0)
        {
            //if all the -ve number are negated and 0 is present the just return th sum
            if(j<n && a[j]==0)
                k=0;
            else if(k%2==1) //else if k is odd then negate the the next smallest element and return sum
            {
                if(j<n)
                {
                    if(j>0 && a[j]<a[j-1])
                        a[j]=-a[j];
                    else if(j>0 && a[j]<=a[j-1])
                        a[j-1]=-a[j-1];
                    else
                        a[j]=-a[j];
                }
                else
                    a[n-1]=-a[n-1];
                    
            }
            
        }
        
        long long s=0;
        for(int i=0;i<n;i++)
            s+=a[i];
        return s;
    }
};

// { Driver Code Starts.
int main()
 {
     int t;
     cin>>t;
     while(t--)
     {
         int n, k;
         cin>>n>>k;
         long long int a[n+5];
         for(int i=0;i<n;i++)
         cin>>a[i];
         Solution ob;
         cout<<ob.maximizeSum(a, n, k)<<endl;
     }
	
	return 0;
}  // } Driver Code Ends