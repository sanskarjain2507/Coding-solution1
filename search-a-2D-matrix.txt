class Solution {
public:
    
    bool binsrch(vector<vector<int>> &matrix,int i,int left,int right,int target)
    {
        if(left>right)
            return 0;
        int mid=(left+right)/2;
        
        if(matrix[i][mid]==target)
            return 1;
        else if(matrix[i][mid]>target)
            return binsrch(matrix,i,left,mid-1,target);
        else
            return binsrch(matrix,i,mid+1,right,target);
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        
        for(int i=0;i<rows;i++) // find the row in which target is possible and then perform binary 
            //search to find the target is available or not 
        {
            if(matrix[i][0]<=target && matrix[i][cols-1]>=target)
                    return binsrch(matrix,i,0,cols-1,target);

        }
        
        return 0;
    }
};